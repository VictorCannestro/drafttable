plugins {
    id('java')
    id('maven-publish')
    id('java-library')
}

group = "$basePackage"
version = "$version"
description = "The DraftTable Library"

repositories {
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

dependencies {
    compileOnly("org.projectlombok:lombok:$lombokVersion")
    annotationProcessor("org.projectlombok:lombok:$lombokVersion")

    implementation("ch.qos.logback:logback-classic:$logbackClassicVersion")
    implementation("org.hamcrest:hamcrest:$hamcrestVersion")
    implementation("org.apache.commons:commons-collections4:$apacheCommonsCollections4Version")
    implementation("org.apache.commons:commons-lang3:$apacheCommonsLang3Version")
    implementation("org.apache.commons:commons-math3:$apacheCommonsMath")
    implementation("org.paumard:streams-utils:$streamsUtilsVersion")
    implementation("com.opencsv:opencsv:$opencsvVersion")
    implementation("com.google.guava:guava:$guavaVersion")
    implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-xml:$jacksonDataformatXmlVersion")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonDatatypeVersion")

    testCompileOnly("org.projectlombok:lombok:$lombokVersion")
    testAnnotationProcessor("org.projectlombok:lombok:$lombokVersion")

    testImplementation(group: 'org.testng', name: 'testng', version: "$testngVersion")
}

test {
    useTestNG() {
        useDefaultListeners = true
        outputDirectory = file("$buildRoot/test-output")

        includeGroups 'component'
        includeGroups 'unit'
    }
}

tasks.withType(JavaExec).configureEach {
    jvmArgs += '--add-opens=java.base/java.time=ALL-UNNAMED'
}

def generatedSrcRoot = "$buildRoot/generated_sources"

sourceSets {
    main {
        java {
            srcDirs generatedSrcRoot
        }
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    withSourcesJar()
}

jar {
    enabled = true
}
